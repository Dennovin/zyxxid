---
- hosts: all
  become: yes
  tasks:
  - apt: update_cache=yes cache_valid_time=86400
  - group: name=zyxxid state=present gid=2001
  - user: name=zyxxid uid=2001 groups=zyxxid append=yes
  - file: path=/data state=directory owner=zyxxid group=zyxxid mode=0755
  - apt: pkg={{ item }} state=present
    with_items:
    - tmux
    - git
  - name: create config directory
    file: path=/data/etc state=directory owner=zyxxid group=zyxxid mode=0755
  - name: create config file
    template: src=templates/zyxxid.yaml.j2 dest=/data/etc/zyxxid.yaml owner=zyxxid mode=0644


- hosts: tex:web
  tasks:
  - name: install Python and required libraries
    apt: name={{ item }} state=present
    with_items:
    - python3-pip
    - python-virtualenv
    - python-dev
    - libffi-dev
    - libssl-dev
    - libyaml-0-2

  - name: synchronize app folder
    copy: src=app dest=/data/ force=yes owner=zyxxid group=zyxxid
  - name: install app into virtual environment
    pip: name="file:///data/app" virtualenv=/data/venv virtualenv_python=python3.4
    become: yes
    become_user: zyxxid


- hosts: tex
  handlers:
  - name: unzip Aniron font
    unarchive: src=/tmp/aniron.zip dest=/usr/local/share/fonts/ copy=no

  tasks:
  - name: install LaTeX requirements
    apt: name={{ item }} state=present
    with_items:
    - fontconfig
    - latex-xcolor
    - texlive-generic-recommended
    - texlive-latex-extra
    - texlive-latex-recommended
    - texlive-xetex
    - unzip

  - name: download PT Sans fonts
    get_url: dest=/usr/local/share/fonts/{{ item }} url=https://github.com/google/fonts/blob/master/ofl/ptsans/{{ item }}?raw=true
    with_items:
    - PT_Sans-Web-Regular.ttf
    - PT_Sans-Web-Bold.ttf
    - PT_Sans-Web-Italic.ttf
    - PT_Sans-Web-BoldItalic.ttf

  - name: download Aniron font
    get_url: dest=/tmp/aniron.zip url=http://dl.1001fonts.com/aniron.zip
    notify: unzip Aniron font

  - name: synchronize tex folder
    copy: src=tex dest=/data/ force=yes owner=zyxxid group=zyxxid

  - name: create output directory
    file: path=/data/output state=directory owner=zyxxid group=zyxxid

  - name: create ramdisk
    mount: name=/data/output src=tmpfs fstype=tmpfs opts="size=128M" state=mounted

  - name: copy files to output directory
    copy: src=tex/{{ item }} dest=/data/output/ force=yes owner=zyxxid group=zyxxid
    with_items:
    - charactersheet.cls


- hosts: web
  handlers:
  - name: restart nginx
    service: name=nginx state=restarted

  tasks:
  - apt: name={{ item }} state=present
    with_items:
    - nginx

  - template: src=templates/nginx.conf.j2 dest=/etc/nginx/sites-available/zyxxid owner=root mode=0644
    notify: restart nginx
  - file: dest=/etc/nginx/sites-enabled/zyxxid src=/etc/nginx/sites-available/zyxxid state=link
  - file: dest=/etc/nginx/sites-enabled/default state=absent
  - file: dest=/etc/nginx/conf.d/{{ item }} state=absent
    with_items:
    - default.conf
    - virtual.conf
    - ssl.conf
    notify: restart nginx
  - synchronize: src=web/ dest=/data/www owner=no
  - file: path=/data/www owner=www-data state=directory recurse=yes
  - git: repo=https://github.com/ephe/grimoire.git dest=/data/grimoire


- hosts: db
  handlers:
  - name: restart Riak
    service: name=riak state=restarted

  tasks:
  - name: install database server packages
    apt: name={{ item }} state=present
    with_items:
    - rabbitmq-server

  - name: set up Riak from template
    template: src=templates/riak.conf.j2 dest=/etc/riak/riak.conf owner=root mode=0644
    notify: restart Riak

  - name: download Riak
    get_url: url=http://s3.amazonaws.com/downloads.basho.com/riak/2.1/2.1.4/ubuntu/trusty/riak_2.1.4-1_amd64.deb dest=/tmp/riak_2.1.4-1_amd64.deb

  - name: install Riak
    apt: deb=/tmp/riak_2.1.4-1_amd64.deb state=present

  - name: start and enable Riak
    service: name=riak enabled=yes state=started

